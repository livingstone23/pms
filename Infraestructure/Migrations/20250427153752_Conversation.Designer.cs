// <auto-generated />
using System;
using Infraestructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infraestructure.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250427153752_Conversation")]
    partial class Conversation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Attachment", b =>
                {
                    b.Property<int>("AttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttachmentId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DiscussionId")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("ServerFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("AttachmentId");

                    b.HasIndex("DiscussionId");

                    b.HasIndex("TicketId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Application Bug"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Network Issue"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "User Issue"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Discussion", b =>
                {
                    b.Property<int>("DiscussionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscussionId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DiscussionId");

                    b.HasIndex("TicketId");

                    b.HasIndex("UserId");

                    b.ToTable("Discussions");
                });

            modelBuilder.Entity("Domain.Entities.Priority", b =>
                {
                    b.Property<int>("PriorityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PriorityId"));

                    b.Property<int>("ExpectedDays")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PriorityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PriorityId");

                    b.ToTable("Priorities");

                    b.HasData(
                        new
                        {
                            PriorityId = 1,
                            ExpectedDays = 14,
                            IsActive = true,
                            PriorityName = "Low"
                        },
                        new
                        {
                            PriorityId = 2,
                            ExpectedDays = 7,
                            IsActive = true,
                            PriorityName = "Medium"
                        },
                        new
                        {
                            PriorityId = 3,
                            ExpectedDays = 1,
                            IsActive = true,
                            PriorityName = "High"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            ProductName = "Product 1"
                        },
                        new
                        {
                            ProductId = 2,
                            ProductName = "Product 2"
                        },
                        new
                        {
                            ProductId = 3,
                            ProductName = "Product 3"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"));

                    b.Property<string>("AssignedToId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ClosedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ClosedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpectedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PriorityId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("RaisedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RaisedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TicketId");

                    b.HasIndex("AssignedToId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PriorityId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            TicketId = 1,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 1",
                            ExpectedDate = new DateTime(2025, 5, 4, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5019),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(4975),
                            Status = "NEW",
                            Summary = "Ticket 1"
                        },
                        new
                        {
                            TicketId = 2,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 2",
                            ExpectedDate = new DateTime(2025, 4, 30, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5027),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5026),
                            Status = "OPEN",
                            Summary = "Ticket 2"
                        },
                        new
                        {
                            TicketId = 3,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5034),
                            Description = "Description 3",
                            ExpectedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5032),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5030),
                            Status = "CLOSED",
                            Summary = "Ticket 3"
                        },
                        new
                        {
                            TicketId = 4,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 4",
                            ExpectedDate = new DateTime(2025, 5, 4, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5040),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5039),
                            Status = "NEW",
                            Summary = "Ticket 4"
                        },
                        new
                        {
                            TicketId = 5,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 5",
                            ExpectedDate = new DateTime(2025, 4, 30, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5044),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5043),
                            Status = "OPEN",
                            Summary = "Ticket 5"
                        },
                        new
                        {
                            TicketId = 6,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5051),
                            Description = "Description 6",
                            ExpectedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5049),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5048),
                            Status = "CLOSED",
                            Summary = "Ticket 6"
                        },
                        new
                        {
                            TicketId = 7,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 7",
                            ExpectedDate = new DateTime(2025, 5, 4, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5055),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5054),
                            Status = "NEW",
                            Summary = "Ticket 7"
                        },
                        new
                        {
                            TicketId = 8,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 8",
                            ExpectedDate = new DateTime(2025, 4, 30, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5059),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5058),
                            Status = "OPEN",
                            Summary = "Ticket 8"
                        },
                        new
                        {
                            TicketId = 9,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5065),
                            Description = "Description 9",
                            ExpectedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5063),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5062),
                            Status = "CLOSED",
                            Summary = "Ticket 9"
                        },
                        new
                        {
                            TicketId = 10,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 10",
                            ExpectedDate = new DateTime(2025, 5, 4, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5069),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5068),
                            Status = "NEW",
                            Summary = "Ticket 10"
                        },
                        new
                        {
                            TicketId = 11,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 11",
                            ExpectedDate = new DateTime(2025, 4, 30, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5073),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5072),
                            Status = "OPEN",
                            Summary = "Ticket 11"
                        },
                        new
                        {
                            TicketId = 12,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5079),
                            Description = "Description 12",
                            ExpectedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5078),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5076),
                            Status = "CLOSED",
                            Summary = "Ticket 12"
                        },
                        new
                        {
                            TicketId = 13,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 13",
                            ExpectedDate = new DateTime(2025, 5, 4, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5083),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5082),
                            Status = "NEW",
                            Summary = "Ticket 13"
                        },
                        new
                        {
                            TicketId = 14,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 14",
                            ExpectedDate = new DateTime(2025, 4, 30, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5088),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5086),
                            Status = "OPEN",
                            Summary = "Ticket 14"
                        },
                        new
                        {
                            TicketId = 15,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5094),
                            Description = "Description 15",
                            ExpectedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5092),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5091),
                            Status = "CLOSED",
                            Summary = "Ticket 15"
                        },
                        new
                        {
                            TicketId = 16,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 16",
                            ExpectedDate = new DateTime(2025, 5, 4, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5098),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5097),
                            Status = "NEW",
                            Summary = "Ticket 16"
                        },
                        new
                        {
                            TicketId = 17,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 17",
                            ExpectedDate = new DateTime(2025, 4, 30, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5102),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5101),
                            Status = "OPEN",
                            Summary = "Ticket 17"
                        },
                        new
                        {
                            TicketId = 18,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5108),
                            Description = "Description 18",
                            ExpectedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5106),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5105),
                            Status = "CLOSED",
                            Summary = "Ticket 18"
                        },
                        new
                        {
                            TicketId = 19,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 19",
                            ExpectedDate = new DateTime(2025, 5, 4, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5112),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5111),
                            Status = "NEW",
                            Summary = "Ticket 19"
                        },
                        new
                        {
                            TicketId = 20,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 20",
                            ExpectedDate = new DateTime(2025, 4, 30, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5251),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5249),
                            Status = "OPEN",
                            Summary = "Ticket 20"
                        },
                        new
                        {
                            TicketId = 21,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5258),
                            Description = "Description 21",
                            ExpectedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5256),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5255),
                            Status = "CLOSED",
                            Summary = "Ticket 21"
                        },
                        new
                        {
                            TicketId = 22,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 22",
                            ExpectedDate = new DateTime(2025, 5, 4, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5263),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5261),
                            Status = "NEW",
                            Summary = "Ticket 22"
                        },
                        new
                        {
                            TicketId = 23,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 23",
                            ExpectedDate = new DateTime(2025, 4, 30, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5267),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5265),
                            Status = "OPEN",
                            Summary = "Ticket 23"
                        },
                        new
                        {
                            TicketId = 24,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5274),
                            Description = "Description 24",
                            ExpectedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5272),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5270),
                            Status = "CLOSED",
                            Summary = "Ticket 24"
                        },
                        new
                        {
                            TicketId = 25,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 25",
                            ExpectedDate = new DateTime(2025, 5, 4, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5278),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5276),
                            Status = "NEW",
                            Summary = "Ticket 25"
                        },
                        new
                        {
                            TicketId = 26,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 26",
                            ExpectedDate = new DateTime(2025, 4, 30, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5282),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5280),
                            Status = "OPEN",
                            Summary = "Ticket 26"
                        },
                        new
                        {
                            TicketId = 27,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5288),
                            Description = "Description 27",
                            ExpectedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5286),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5285),
                            Status = "CLOSED",
                            Summary = "Ticket 27"
                        },
                        new
                        {
                            TicketId = 28,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 28",
                            ExpectedDate = new DateTime(2025, 5, 4, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5292),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5290),
                            Status = "NEW",
                            Summary = "Ticket 28"
                        },
                        new
                        {
                            TicketId = 29,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 29",
                            ExpectedDate = new DateTime(2025, 4, 30, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5296),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5295),
                            Status = "OPEN",
                            Summary = "Ticket 29"
                        },
                        new
                        {
                            TicketId = 30,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5302),
                            Description = "Description 30",
                            ExpectedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5300),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5299),
                            Status = "CLOSED",
                            Summary = "Ticket 30"
                        },
                        new
                        {
                            TicketId = 31,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 31",
                            ExpectedDate = new DateTime(2025, 5, 4, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5306),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5305),
                            Status = "NEW",
                            Summary = "Ticket 31"
                        },
                        new
                        {
                            TicketId = 32,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 32",
                            ExpectedDate = new DateTime(2025, 4, 30, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5310),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5309),
                            Status = "OPEN",
                            Summary = "Ticket 32"
                        },
                        new
                        {
                            TicketId = 33,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5317),
                            Description = "Description 33",
                            ExpectedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5315),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5314),
                            Status = "CLOSED",
                            Summary = "Ticket 33"
                        },
                        new
                        {
                            TicketId = 34,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 34",
                            ExpectedDate = new DateTime(2025, 5, 4, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5321),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5320),
                            Status = "NEW",
                            Summary = "Ticket 34"
                        },
                        new
                        {
                            TicketId = 35,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 35",
                            ExpectedDate = new DateTime(2025, 4, 30, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5325),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5324),
                            Status = "OPEN",
                            Summary = "Ticket 35"
                        },
                        new
                        {
                            TicketId = 36,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5331),
                            Description = "Description 36",
                            ExpectedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5329),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5328),
                            Status = "CLOSED",
                            Summary = "Ticket 36"
                        },
                        new
                        {
                            TicketId = 37,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 37",
                            ExpectedDate = new DateTime(2025, 5, 4, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5335),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5334),
                            Status = "NEW",
                            Summary = "Ticket 37"
                        },
                        new
                        {
                            TicketId = 38,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 38",
                            ExpectedDate = new DateTime(2025, 4, 30, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5339),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5338),
                            Status = "OPEN",
                            Summary = "Ticket 38"
                        },
                        new
                        {
                            TicketId = 39,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5345),
                            Description = "Description 39",
                            ExpectedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5343),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5342),
                            Status = "CLOSED",
                            Summary = "Ticket 39"
                        },
                        new
                        {
                            TicketId = 40,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 40",
                            ExpectedDate = new DateTime(2025, 5, 4, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5349),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5348),
                            Status = "NEW",
                            Summary = "Ticket 40"
                        },
                        new
                        {
                            TicketId = 41,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 41",
                            ExpectedDate = new DateTime(2025, 4, 30, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5353),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5352),
                            Status = "OPEN",
                            Summary = "Ticket 41"
                        },
                        new
                        {
                            TicketId = 42,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5360),
                            Description = "Description 42",
                            ExpectedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5358),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5357),
                            Status = "CLOSED",
                            Summary = "Ticket 42"
                        },
                        new
                        {
                            TicketId = 43,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 43",
                            ExpectedDate = new DateTime(2025, 5, 4, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5364),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5363),
                            Status = "NEW",
                            Summary = "Ticket 43"
                        },
                        new
                        {
                            TicketId = 44,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 44",
                            ExpectedDate = new DateTime(2025, 4, 30, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5369),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5367),
                            Status = "OPEN",
                            Summary = "Ticket 44"
                        },
                        new
                        {
                            TicketId = 45,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5375),
                            Description = "Description 45",
                            ExpectedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5373),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5371),
                            Status = "CLOSED",
                            Summary = "Ticket 45"
                        },
                        new
                        {
                            TicketId = 46,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 46",
                            ExpectedDate = new DateTime(2025, 5, 4, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5379),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5377),
                            Status = "NEW",
                            Summary = "Ticket 46"
                        },
                        new
                        {
                            TicketId = 47,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 47",
                            ExpectedDate = new DateTime(2025, 4, 30, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5383),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5381),
                            Status = "OPEN",
                            Summary = "Ticket 47"
                        },
                        new
                        {
                            TicketId = 48,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5389),
                            Description = "Description 48",
                            ExpectedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5387),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5386),
                            Status = "CLOSED",
                            Summary = "Ticket 48"
                        },
                        new
                        {
                            TicketId = 49,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 49",
                            ExpectedDate = new DateTime(2025, 5, 4, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5393),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5391),
                            Status = "NEW",
                            Summary = "Ticket 49"
                        },
                        new
                        {
                            TicketId = 50,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 50",
                            ExpectedDate = new DateTime(2025, 4, 30, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5397),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5395),
                            Status = "OPEN",
                            Summary = "Ticket 50"
                        },
                        new
                        {
                            TicketId = 51,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 41",
                            ExpectedDate = new DateTime(2025, 4, 30, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5401),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5400),
                            Status = "OPEN",
                            Summary = "Ticket 41"
                        },
                        new
                        {
                            TicketId = 52,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5407),
                            Description = "Description 42",
                            ExpectedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5405),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5404),
                            Status = "CLOSED",
                            Summary = "Ticket 42"
                        },
                        new
                        {
                            TicketId = 53,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 43",
                            ExpectedDate = new DateTime(2025, 5, 4, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5411),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5410),
                            Status = "NEW",
                            Summary = "Ticket 43"
                        },
                        new
                        {
                            TicketId = 54,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 44",
                            ExpectedDate = new DateTime(2025, 4, 30, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5438),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5436),
                            Status = "OPEN",
                            Summary = "Ticket 44"
                        },
                        new
                        {
                            TicketId = 55,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5445),
                            Description = "Description 45",
                            ExpectedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5443),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5441),
                            Status = "CLOSED",
                            Summary = "Ticket 45"
                        },
                        new
                        {
                            TicketId = 56,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 46",
                            ExpectedDate = new DateTime(2025, 5, 4, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5449),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5447),
                            Status = "NEW",
                            Summary = "Ticket 46"
                        },
                        new
                        {
                            TicketId = 57,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 47",
                            ExpectedDate = new DateTime(2025, 4, 30, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5453),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5451),
                            Status = "OPEN",
                            Summary = "Ticket 47"
                        },
                        new
                        {
                            TicketId = 58,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5459),
                            Description = "Description 48",
                            ExpectedDate = new DateTime(2025, 4, 28, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5457),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5456),
                            Status = "CLOSED",
                            Summary = "Ticket 48"
                        },
                        new
                        {
                            TicketId = 59,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 49",
                            ExpectedDate = new DateTime(2025, 5, 4, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5463),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5462),
                            Status = "NEW",
                            Summary = "Ticket 49"
                        },
                        new
                        {
                            TicketId = 60,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 50",
                            ExpectedDate = new DateTime(2025, 4, 30, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5467),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 27, 17, 37, 52, 220, DateTimeKind.Local).AddTicks(5466),
                            Status = "OPEN",
                            Summary = "Ticket 50"
                        });
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool>("AccountConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            AccessFailedCount = 0,
                            AccountConfirmed = false,
                            ConcurrencyStamp = "989ba927-3be9-40f9-a4b4-9d9a1b3f101e",
                            Email = "Test@gmail.com",
                            EmailConfirmed = true,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "TEST@GMAIL.COM",
                            NormalizedUserName = "TEST@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEGoMpeqni1aUdEB2/e0qT9Xydf0+KukFpN8O6sM+yufBsKI8qxMq3oS+TqeuJqH1UA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9afd863e-e059-42ba-af60-a4d96eaf7b70",
                            TwoFactorEnabled = false,
                            UserName = "Test@gmail.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "48395B9B-4F2A-4E8C-8D3B-0A1E5F7B9C6D",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "A4F5E8B2-3C6D-4E8C-8D3B-0A1E5F7B9C6D",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RoleId = "48395B9B-4F2A-4E8C-8D3B-0A1E5F7B9C6D"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Attachment", b =>
                {
                    b.HasOne("Domain.Entities.Discussion", "Discussion")
                        .WithMany("Attachments")
                        .HasForeignKey("DiscussionId");

                    b.HasOne("Domain.Entities.Ticket", "Ticket")
                        .WithMany("Attachments")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discussion");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("Domain.Entities.Discussion", b =>
                {
                    b.HasOne("Domain.Entities.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Ticket", b =>
                {
                    b.HasOne("Domain.Entities.User", "AssignedTo")
                        .WithMany()
                        .HasForeignKey("AssignedToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Priority", "Priority")
                        .WithMany()
                        .HasForeignKey("PriorityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("AssignedTo");

                    b.Navigation("Category");

                    b.Navigation("Priority");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Discussion", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("Domain.Entities.Ticket", b =>
                {
                    b.Navigation("Attachments");
                });
#pragma warning restore 612, 618
        }
    }
}
