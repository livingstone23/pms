// <auto-generated />
using System;
using Infraestructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infraestructure.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250418121353_updateAttachmentFileSize")]
    partial class updateAttachmentFileSize
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Attachment", b =>
                {
                    b.Property<int>("AttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttachmentId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DiscussionId")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("ServerFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("AttachmentId");

                    b.HasIndex("DiscussionId");

                    b.HasIndex("TicketId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Application Bug"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Network Issue"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "User Issue"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Discussion", b =>
                {
                    b.Property<int>("DiscussionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscussionId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DiscussionId");

                    b.HasIndex("TicketId");

                    b.HasIndex("UserId");

                    b.ToTable("Discussions");
                });

            modelBuilder.Entity("Domain.Entities.Priority", b =>
                {
                    b.Property<int>("PriorityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PriorityId"));

                    b.Property<int>("ExpectedDays")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PriorityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PriorityId");

                    b.ToTable("Priorities");

                    b.HasData(
                        new
                        {
                            PriorityId = 1,
                            ExpectedDays = 14,
                            IsActive = true,
                            PriorityName = "Low"
                        },
                        new
                        {
                            PriorityId = 2,
                            ExpectedDays = 7,
                            IsActive = true,
                            PriorityName = "Medium"
                        },
                        new
                        {
                            PriorityId = 3,
                            ExpectedDays = 1,
                            IsActive = true,
                            PriorityName = "High"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            ProductName = "Product 1"
                        },
                        new
                        {
                            ProductId = 2,
                            ProductName = "Product 2"
                        },
                        new
                        {
                            ProductId = 3,
                            ProductName = "Product 3"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"));

                    b.Property<string>("AssignedToId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ClosedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ClosedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpectedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PriorityId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("RaisedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RaisedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TicketId");

                    b.HasIndex("AssignedToId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PriorityId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            TicketId = 1,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 1",
                            ExpectedDate = new DateTime(2025, 4, 25, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2150),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2104),
                            Status = "NEW",
                            Summary = "Ticket 1"
                        },
                        new
                        {
                            TicketId = 2,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 2",
                            ExpectedDate = new DateTime(2025, 4, 21, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2158),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2156),
                            Status = "OPEN",
                            Summary = "Ticket 2"
                        },
                        new
                        {
                            TicketId = 3,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2164),
                            Description = "Description 3",
                            ExpectedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2162),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2161),
                            Status = "CLOSED",
                            Summary = "Ticket 3"
                        },
                        new
                        {
                            TicketId = 4,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 4",
                            ExpectedDate = new DateTime(2025, 4, 25, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2170),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2169),
                            Status = "NEW",
                            Summary = "Ticket 4"
                        },
                        new
                        {
                            TicketId = 5,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 5",
                            ExpectedDate = new DateTime(2025, 4, 21, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2175),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2174),
                            Status = "OPEN",
                            Summary = "Ticket 5"
                        },
                        new
                        {
                            TicketId = 6,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2181),
                            Description = "Description 6",
                            ExpectedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2179),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2178),
                            Status = "CLOSED",
                            Summary = "Ticket 6"
                        },
                        new
                        {
                            TicketId = 7,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 7",
                            ExpectedDate = new DateTime(2025, 4, 25, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2185),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2183),
                            Status = "NEW",
                            Summary = "Ticket 7"
                        },
                        new
                        {
                            TicketId = 8,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 8",
                            ExpectedDate = new DateTime(2025, 4, 21, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2189),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2188),
                            Status = "OPEN",
                            Summary = "Ticket 8"
                        },
                        new
                        {
                            TicketId = 9,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2195),
                            Description = "Description 9",
                            ExpectedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2193),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2192),
                            Status = "CLOSED",
                            Summary = "Ticket 9"
                        },
                        new
                        {
                            TicketId = 10,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 10",
                            ExpectedDate = new DateTime(2025, 4, 25, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2199),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2197),
                            Status = "NEW",
                            Summary = "Ticket 10"
                        },
                        new
                        {
                            TicketId = 11,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 11",
                            ExpectedDate = new DateTime(2025, 4, 21, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2298),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2296),
                            Status = "OPEN",
                            Summary = "Ticket 11"
                        },
                        new
                        {
                            TicketId = 12,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2305),
                            Description = "Description 12",
                            ExpectedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2303),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2302),
                            Status = "CLOSED",
                            Summary = "Ticket 12"
                        },
                        new
                        {
                            TicketId = 13,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 13",
                            ExpectedDate = new DateTime(2025, 4, 25, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2309),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2307),
                            Status = "NEW",
                            Summary = "Ticket 13"
                        },
                        new
                        {
                            TicketId = 14,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 14",
                            ExpectedDate = new DateTime(2025, 4, 21, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2314),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2313),
                            Status = "OPEN",
                            Summary = "Ticket 14"
                        },
                        new
                        {
                            TicketId = 15,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2376),
                            Description = "Description 15",
                            ExpectedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2318),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2317),
                            Status = "CLOSED",
                            Summary = "Ticket 15"
                        },
                        new
                        {
                            TicketId = 16,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 16",
                            ExpectedDate = new DateTime(2025, 4, 25, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2381),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2380),
                            Status = "NEW",
                            Summary = "Ticket 16"
                        },
                        new
                        {
                            TicketId = 17,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 17",
                            ExpectedDate = new DateTime(2025, 4, 21, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2385),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2384),
                            Status = "OPEN",
                            Summary = "Ticket 17"
                        },
                        new
                        {
                            TicketId = 18,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2391),
                            Description = "Description 18",
                            ExpectedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2389),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2388),
                            Status = "CLOSED",
                            Summary = "Ticket 18"
                        },
                        new
                        {
                            TicketId = 19,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 19",
                            ExpectedDate = new DateTime(2025, 4, 25, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2395),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2393),
                            Status = "NEW",
                            Summary = "Ticket 19"
                        },
                        new
                        {
                            TicketId = 20,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 20",
                            ExpectedDate = new DateTime(2025, 4, 21, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2399),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2397),
                            Status = "OPEN",
                            Summary = "Ticket 20"
                        },
                        new
                        {
                            TicketId = 21,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2404),
                            Description = "Description 21",
                            ExpectedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2403),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2401),
                            Status = "CLOSED",
                            Summary = "Ticket 21"
                        },
                        new
                        {
                            TicketId = 22,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 22",
                            ExpectedDate = new DateTime(2025, 4, 25, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2409),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2407),
                            Status = "NEW",
                            Summary = "Ticket 22"
                        },
                        new
                        {
                            TicketId = 23,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 23",
                            ExpectedDate = new DateTime(2025, 4, 21, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2415),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2414),
                            Status = "OPEN",
                            Summary = "Ticket 23"
                        },
                        new
                        {
                            TicketId = 24,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2421),
                            Description = "Description 24",
                            ExpectedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2419),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2418),
                            Status = "CLOSED",
                            Summary = "Ticket 24"
                        },
                        new
                        {
                            TicketId = 25,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 25",
                            ExpectedDate = new DateTime(2025, 4, 25, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2425),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2423),
                            Status = "NEW",
                            Summary = "Ticket 25"
                        },
                        new
                        {
                            TicketId = 26,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 26",
                            ExpectedDate = new DateTime(2025, 4, 21, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2429),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2427),
                            Status = "OPEN",
                            Summary = "Ticket 26"
                        },
                        new
                        {
                            TicketId = 27,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2434),
                            Description = "Description 27",
                            ExpectedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2433),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2431),
                            Status = "CLOSED",
                            Summary = "Ticket 27"
                        },
                        new
                        {
                            TicketId = 28,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 28",
                            ExpectedDate = new DateTime(2025, 4, 25, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2438),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2437),
                            Status = "NEW",
                            Summary = "Ticket 28"
                        },
                        new
                        {
                            TicketId = 29,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 29",
                            ExpectedDate = new DateTime(2025, 4, 21, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2442),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2441),
                            Status = "OPEN",
                            Summary = "Ticket 29"
                        },
                        new
                        {
                            TicketId = 30,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2448),
                            Description = "Description 30",
                            ExpectedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2446),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2445),
                            Status = "CLOSED",
                            Summary = "Ticket 30"
                        },
                        new
                        {
                            TicketId = 31,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 31",
                            ExpectedDate = new DateTime(2025, 4, 25, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2452),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2450),
                            Status = "NEW",
                            Summary = "Ticket 31"
                        },
                        new
                        {
                            TicketId = 32,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 32",
                            ExpectedDate = new DateTime(2025, 4, 21, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2457),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2455),
                            Status = "OPEN",
                            Summary = "Ticket 32"
                        },
                        new
                        {
                            TicketId = 33,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2462),
                            Description = "Description 33",
                            ExpectedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2461),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2459),
                            Status = "CLOSED",
                            Summary = "Ticket 33"
                        },
                        new
                        {
                            TicketId = 34,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 34",
                            ExpectedDate = new DateTime(2025, 4, 25, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2466),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2465),
                            Status = "NEW",
                            Summary = "Ticket 34"
                        },
                        new
                        {
                            TicketId = 35,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 35",
                            ExpectedDate = new DateTime(2025, 4, 21, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2470),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2469),
                            Status = "OPEN",
                            Summary = "Ticket 35"
                        },
                        new
                        {
                            TicketId = 36,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2476),
                            Description = "Description 36",
                            ExpectedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2474),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2473),
                            Status = "CLOSED",
                            Summary = "Ticket 36"
                        },
                        new
                        {
                            TicketId = 37,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 37",
                            ExpectedDate = new DateTime(2025, 4, 25, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2480),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2478),
                            Status = "NEW",
                            Summary = "Ticket 37"
                        },
                        new
                        {
                            TicketId = 38,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 38",
                            ExpectedDate = new DateTime(2025, 4, 21, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2484),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2482),
                            Status = "OPEN",
                            Summary = "Ticket 38"
                        },
                        new
                        {
                            TicketId = 39,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2489),
                            Description = "Description 39",
                            ExpectedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2488),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2486),
                            Status = "CLOSED",
                            Summary = "Ticket 39"
                        },
                        new
                        {
                            TicketId = 40,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 40",
                            ExpectedDate = new DateTime(2025, 4, 25, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2493),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2492),
                            Status = "NEW",
                            Summary = "Ticket 40"
                        },
                        new
                        {
                            TicketId = 41,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 41",
                            ExpectedDate = new DateTime(2025, 4, 21, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2498),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2496),
                            Status = "OPEN",
                            Summary = "Ticket 41"
                        },
                        new
                        {
                            TicketId = 42,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2504),
                            Description = "Description 42",
                            ExpectedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2502),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2501),
                            Status = "CLOSED",
                            Summary = "Ticket 42"
                        },
                        new
                        {
                            TicketId = 43,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 43",
                            ExpectedDate = new DateTime(2025, 4, 25, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2508),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2506),
                            Status = "NEW",
                            Summary = "Ticket 43"
                        },
                        new
                        {
                            TicketId = 44,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 44",
                            ExpectedDate = new DateTime(2025, 4, 21, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2512),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2510),
                            Status = "OPEN",
                            Summary = "Ticket 44"
                        },
                        new
                        {
                            TicketId = 45,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2550),
                            Description = "Description 45",
                            ExpectedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2548),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2546),
                            Status = "CLOSED",
                            Summary = "Ticket 45"
                        },
                        new
                        {
                            TicketId = 46,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 46",
                            ExpectedDate = new DateTime(2025, 4, 25, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2554),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2553),
                            Status = "NEW",
                            Summary = "Ticket 46"
                        },
                        new
                        {
                            TicketId = 47,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 47",
                            ExpectedDate = new DateTime(2025, 4, 21, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2558),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2557),
                            Status = "OPEN",
                            Summary = "Ticket 47"
                        },
                        new
                        {
                            TicketId = 48,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2564),
                            Description = "Description 48",
                            ExpectedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2562),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2561),
                            Status = "CLOSED",
                            Summary = "Ticket 48"
                        },
                        new
                        {
                            TicketId = 49,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 49",
                            ExpectedDate = new DateTime(2025, 4, 25, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2568),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2567),
                            Status = "NEW",
                            Summary = "Ticket 49"
                        },
                        new
                        {
                            TicketId = 50,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 50",
                            ExpectedDate = new DateTime(2025, 4, 21, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2572),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2571),
                            Status = "OPEN",
                            Summary = "Ticket 50"
                        },
                        new
                        {
                            TicketId = 51,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 41",
                            ExpectedDate = new DateTime(2025, 4, 21, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2577),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2576),
                            Status = "OPEN",
                            Summary = "Ticket 41"
                        },
                        new
                        {
                            TicketId = 52,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2583),
                            Description = "Description 42",
                            ExpectedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2581),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2580),
                            Status = "CLOSED",
                            Summary = "Ticket 42"
                        },
                        new
                        {
                            TicketId = 53,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 43",
                            ExpectedDate = new DateTime(2025, 4, 25, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2587),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2585),
                            Status = "NEW",
                            Summary = "Ticket 43"
                        },
                        new
                        {
                            TicketId = 54,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 44",
                            ExpectedDate = new DateTime(2025, 4, 21, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2591),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2589),
                            Status = "OPEN",
                            Summary = "Ticket 44"
                        },
                        new
                        {
                            TicketId = 55,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2596),
                            Description = "Description 45",
                            ExpectedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2595),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2593),
                            Status = "CLOSED",
                            Summary = "Ticket 45"
                        },
                        new
                        {
                            TicketId = 56,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 46",
                            ExpectedDate = new DateTime(2025, 4, 25, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2600),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2599),
                            Status = "NEW",
                            Summary = "Ticket 46"
                        },
                        new
                        {
                            TicketId = 57,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 47",
                            ExpectedDate = new DateTime(2025, 4, 21, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2604),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2603),
                            Status = "OPEN",
                            Summary = "Ticket 47"
                        },
                        new
                        {
                            TicketId = 58,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 3,
                            ClosedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            ClosedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2610),
                            Description = "Description 48",
                            ExpectedDate = new DateTime(2025, 4, 19, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2608),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2607),
                            Status = "CLOSED",
                            Summary = "Ticket 48"
                        },
                        new
                        {
                            TicketId = 59,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 1,
                            Description = "Description 49",
                            ExpectedDate = new DateTime(2025, 4, 25, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2614),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2613),
                            Status = "NEW",
                            Summary = "Ticket 49"
                        },
                        new
                        {
                            TicketId = 60,
                            AssignedToId = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            CategoryId = 2,
                            Description = "Description 50",
                            ExpectedDate = new DateTime(2025, 4, 21, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2618),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            RaisedDate = new DateTime(2025, 4, 18, 14, 13, 52, 536, DateTimeKind.Local).AddTicks(2617),
                            Status = "OPEN",
                            Summary = "Ticket 50"
                        });
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool>("AccountConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "62f94fe7-0580-42df-969c-4b0f1a2c3d7e",
                            AccessFailedCount = 0,
                            AccountConfirmed = false,
                            ConcurrencyStamp = "0e4d8f95-9516-479e-b433-643af1416b25",
                            Email = "Test@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "TEST@GMAIL.COM",
                            NormalizedUserName = "TEST@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAENl9f5OdnZ7DNZQkJ/QmzJDbMIn4IN9TtMZtjVfktpNNruPpaoUVFOWrQlDfjRbd2Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6226ea8a-1f73-4b46-89ba-0825e83d81ad",
                            TwoFactorEnabled = false,
                            UserName = "Test@gmail.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Attachment", b =>
                {
                    b.HasOne("Domain.Entities.Discussion", "Discussion")
                        .WithMany("Attachments")
                        .HasForeignKey("DiscussionId");

                    b.HasOne("Domain.Entities.Ticket", "Ticket")
                        .WithMany("Attachments")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discussion");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("Domain.Entities.Discussion", b =>
                {
                    b.HasOne("Domain.Entities.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Ticket", b =>
                {
                    b.HasOne("Domain.Entities.User", "AssignedTo")
                        .WithMany()
                        .HasForeignKey("AssignedToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Priority", "Priority")
                        .WithMany()
                        .HasForeignKey("PriorityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("AssignedTo");

                    b.Navigation("Category");

                    b.Navigation("Priority");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Discussion", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("Domain.Entities.Ticket", b =>
                {
                    b.Navigation("Attachments");
                });
#pragma warning restore 612, 618
        }
    }
}
