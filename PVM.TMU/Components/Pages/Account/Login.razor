@page "/login"
@layout EmptyLayout


@using System.ComponentModel.DataAnnotations
@using Domain.Entities
@using Domain.Interfaces
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using Microsoft.AspNetCore.Identity


@inject IAccountService accountService;
@inject NavigationManager nav
@inject EncryptionHelper<LoginDTO> encryp;
@inject ProtectedSessionStorage protectedSessionStorage
@inject SignInManager<User> signInManager;


@rendermode  InteractiveServer


<section class="vh-100 d-flex justify-content-center align-items-center">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6 col-lg-5 col-xl-4">
                <div class="text-center mb-4">
                    <a href="https://provimad.com/" target="_blank">
                        <img src="/assets/imgs/logoProvimad.jpg" class="img-fluid mb-2" style="max-width: 150px;" alt="Provimad logo" />
                    </a>
                    <h4 class="fw-normal">Bienvenido a ProvTicket</h4>
                </div>

                <Alert @ref="alert" />

                <EditForm Model="Input" method="post" OnValidSubmit="OnLogin" FormName="Login">
                    <DataAnnotationsValidator />

                    <div class="form-floating mb-3">
                        <InputText @bind-Value="Input.Email" class="form-control" placeholder="Correo" />
                        <label for="email">Correo</label>
                        <ValidationMessage For="@(() => Input.Email)" class="text-danger" />
                    </div>

                    <div class="form-floating mb-3">
                        <InputText type="password" @bind-Value="Input.Password" class="form-control" placeholder="Clave" />
                        <label for="password">Clave</label>
                        <ValidationMessage For="@(() => Input.Password)" class="text-danger" />
                    </div>

                    <div>
                        <button type="submit" class="btn btn-primary w-100">Login</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</section>



@code {


    private Alert alert;


    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();


    // protected override async Task OnInitializedAsync()
    // {
    //     await accountService.RegisterUser(new Domain.DTO.Request.RegisterUserRequest
    //     {
    //         Email = "test@gmail.com",
    //             Role = "Admin",
    //     });
    // }


    private async Task OnLogin()
    {

        var verify = await accountService.VerifyUser(Input.Email, Input.Password);
        if (!verify.IsSuccess)
        {
            alert.ShowFailed(verify.ErrorMessage);
            return;
        }

        var loginData = new LoginDTO
        {
            Username = verify.Value,
            Password = Input.Password,
            Rememberme = Input.Remember
        };


        var user = await signInManager.UserManager.FindByEmailAsync(verify.Value);
        await protectedSessionStorage.SetAsync("avatar", user.Avatar);
        await protectedSessionStorage.SetAsync("email", user.Email);
        await protectedSessionStorage.SetAsync("accountconfirmed", user.AccountConfirmed);


        
        //nav.NavigateTo($"/processor/{verify.Value}/{Input.Password}/{Input.Remember}");
        var payload = encryp.Encode(loginData);
        nav.NavigateTo($"/processor/{payload}");

    }





    private sealed class InputModel
    {

        [Required]
        [EmailAddress]
        public string Email {get;set;} = "";

        [Required]
        [DataType(DataType.Password)]
        public string Password {get;set;} = "";

        public bool Remember { get; set; } = false;

    }


}
